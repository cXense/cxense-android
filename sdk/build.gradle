apply plugin: 'com.android.library'

ext {
    sdkPublicName = 'Unified'
    authority = 'CxSdkInitProvider'
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"


    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "$version"
        buildConfigField "String", "SDK_NAME", '"cxense"'
        buildConfigField "String", "SDK_ENDPOINT", '"https://api.cxense.com"'
        buildConfigField "String", "AUTHORITY", "APPLICATION_ID + \".$authority\" "

        manifestPlaceholders = [authority: "$authority"]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        // Don't abort if Lint finds an error, otherwise the Jenkins build
        // will be marked as failed, and Jenkins won't analyse the Lint output
        abortOnError false
    }
}

dependencies {
    api "com.cxpublic.cx-android-sdk:cx-core:$cxenseVersion"

    testImplementation "org.powermock:powermock-module-junit4:$powermockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powermockVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"
}

apply from: "$rootDir/gradle/javaDoc.gradle"
apply from: "$rootDir/gradle/pack.gradle"
apply from: "$rootDir/gradle/upload.gradle"
